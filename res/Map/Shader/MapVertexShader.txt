//Camera Shader
//Vertex Shader
#version 330 core 
layout (location = 0) in vec2 vertex;
layout (location = 1) in vec4 pos;
layout (location = 2) in vec4 cordsTex; 
layout (location = 3) in float rotate; 
out vec2 TexCoords;

uniform mat4 projection;
uniform vec4 view;

void main()
{
    gl_Position = projection * vec4(vertex.x*pos.w+pos.x-view.x, vertex.y*pos.w+pos.y-view.y, pos.z, 1.0);
	
	TexCoords.x=mix(cordsTex.x, cordsTex.z, vertex.x);
	TexCoords.y=mix(cordsTex.y, cordsTex.w, vertex.y);

    if(rotate>0.5)
        if( abs(vertex.x-vertex.y)<0.1){
			TexCoords.x=mix(cordsTex.z, cordsTex.x, vertex.x);
        }
        else{
            TexCoords.y=mix(cordsTex.w, cordsTex.y, vertex.y);
        }
}